// Generated by uRequire v0.6.20 - template: 'UMD' 
(function (window, global) {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;
(function (factory) {
  if (typeof exports === 'object') {
    var nr = new (require('urequire').NodeRequirer) ('reqwest', module, __dirname, '.');
    module.exports = factory(nr.require, exports, module, nr.require('./qwest'));
} else if (typeof define === 'function' && define.amd) { define(['require', 'exports', 'module', './qwest'], factory) } else throw new Error('uRequire: Loading UMD module as <script>, without `build.noLoaderUMD`');
}).call(this, function (require, exports, module, qwest) {
  

var cacheStash = {};
  var defaultOptions = { responseType: "json" };
  return {
    call: function call(url, data) {
      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
      options = Object.merge(defaultOptions, options);
      return new Promise(function (success, failure) {
        (data ? qwest.post(url, data, options) : qwest.get(url, null, options)).then(success)["catch"](failure);
      });
    },
    callCache: function callCache(url, data) {
      var maxAge = arguments.length <= 2 || arguments[2] === undefined ? 3600 : arguments[2];
      var key = JSON.stringify(arguments);
      if (cacheStash[key]) {
        return cacheStash[key];
      } else {
        var localCacheOnly = Object.isString(maxAge);
        setTimeout(function () {
          return delete cacheStash[key];
        }, localCacheOnly ? 3600 * 1000 : maxAge * 1000);
        return cacheStash[key] = this.call(url, data, localCacheOnly ? {} : { cache: maxAge });
      }
    }
  };


})
}).call(this, (typeof exports === 'object' ? global : window), (typeof exports === 'object' ? global : window))